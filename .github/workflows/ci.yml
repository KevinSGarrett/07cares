name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable pnpm via corepack
        shell: bash
        run: |
          set -euo pipefail
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm --version

      - name: Install deps
        shell: bash
        run: pnpm install --no-frozen-lockfile

      # Provide minimal env so Next build doesn't fail validation in CI
      - name: Create .env for CI build
        shell: bash
        run: |
          set -euo pipefail
          cat > .env << 'EOF'
          # App
          NEXT_PUBLIC_APP_URL=http://localhost:3000
          NODE_ENV=production
          AUTH_BYPASS=true

          # Database
          DATABASE_URL=postgresql://postgres:postgres@localhost:5432/fundraise?sslmode=disable

          # Clerk
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_dummy
          CLERK_SECRET_KEY=sk_test_dummy

          # Stripe
          STRIPE_SECRET_KEY=sk_test_dummy
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_dummy
          STRIPE_WEBHOOK_SECRET=whsec_dummy
          STRIPE_CONNECT_WEBHOOK_SECRET=whsec_dummy

          # Cloudinary
          CLOUDINARY_CLOUD_NAME=demo
          CLOUDINARY_API_KEY=demo
          CLOUDINARY_API_SECRET=demo

          # Mux
          MUX_TOKEN_ID=demo
          MUX_TOKEN_SECRET=demo

          # Typesense
          TYPESENSE_HOST=localhost
          TYPESENSE_PROTOCOL=http
          TYPESENSE_PORT=8108
          TYPESENSE_API_KEY=xyz

          # Pusher
          PUSHER_APP_ID=1111
          PUSHER_KEY=key
          PUSHER_SECRET=secret
          PUSHER_CLUSTER=us2
          NEXT_PUBLIC_PUSHER_KEY=key
          NEXT_PUBLIC_PUSHER_CLUSTER=us2

          # Postmark
          POSTMARK_SERVER_TOKEN=dummy

          # Twilio
          TWILIO_ACCOUNT_SID=AC_dummy
          TWILIO_AUTH_TOKEN=dummy
          TWILIO_MESSAGING_SERVICE_SID=MG_dummy

          # GrowthBook
          NEXT_PUBLIC_GROWTHBOOK_CLIENT_KEY=gb_dummy
          GROWTHBOOK_API_HOST=https://cdn.growthbook.io
          EOF

          cp .env .env.local

      # pnpm v10 blocks some postinstall scripts; rebuild key packages & generate Prisma client
      - name: Rebuild blocked script packages (pnpm v10)
        shell: bash
        run: |
          set -euo pipefail
          pnpm rebuild @prisma/client @prisma/engines esbuild prisma sharp unrs-resolver || true

      - name: Generate Prisma client
        shell: bash
        run: pnpm prisma:generate

      - name: Typecheck (optional)
        if: hashFiles('tsconfig.json') != ''
        shell: bash
        run: |
          if pnpm -s run | grep -q "^typecheck"; then pnpm typecheck; else echo "no typecheck script"; fi

      - name: Lint (optional)
        shell: bash
        run: |
          if pnpm -s run | grep -q "^lint"; then pnpm lint; else echo "no lint script"; fi

      - name: Unit tests + coverage
        shell: bash
        run: pnpm test

      - name: Build
        shell: bash
        run: pnpm build
